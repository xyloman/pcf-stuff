#!/bin/bash

set -e

shopt -s expand_aliases

alias uaac='BUNDLE_GEMFILE=/home/tempest-web/tempest/web/vendor/uaac/Gemfile bundle exec uaac'

usage_and_exit() {
  cat <<EOF
Usage: opsman <command> [options]
Examples:
  opsman login
  opsman upload cf-1.8.5-build.4.pivotal
  opsman stemcell bosh-stemcell-3363.24-vsphere-esxi-ubuntu-trusty-go_agent.tgz
  opsman export
EOF
  exit 1
}

error_and_exit() {
  echo "$1" && exit 1
}

login_to_uaac() {
  local OPSMAN_USER=
  read -r -p "Ops Manager User: " OPSMAN_USER

  local OPSMAN_PASS=
  read -r -s -p "Ops Manager Pass: " OPSMAN_PASS

  uaac target https://localhost/uaa --skip-ssl-validation

  uaac token owner get opsman "$OPSMAN_USER" -p "$OPSMAN_PASS" -s ''

  echo "User $OPSMAN_USER logged in successfully."
}

is_valid_access_token() {
  local UAA_ACCESS_TOKEN=$1
  [ -n "$UAA_ACCESS_TOKEN" ] || return 1

  local STATUS_CODE=$(curl http://localhost/uaa/check_token -k -L -G \
    -s -o /dev/null -w "%{http_code}" \
    -u "opsman:" \
    -d token_type=bearer \
    -d token="$UAA_ACCESS_TOKEN")

    [ "200" = "$STATUS_CODE" ]
}

upload_stemcell() {
 local LOCAL_FILE_NAME=$1
  if [ -z "$LOCAL_FILE_NAME" ]; then
    read -r -p "Local file name: " LOCAL_FILE_NAME
  fi

  if [ ! -f "$LOCAL_FILE_NAME" ]; then
    error_and_exit "Invalid file: $LOCAL_FILE_NAME"
  fi

  local UAA_ACCESS_TOKEN=$(uaac context | grep access_token | awk '{ print $2 }')

  if ! is_valid_access_token "$UAA_ACCESS_TOKEN"; then
    login_to_uaac
    UAA_ACCESS_TOKEN=$(uaac context | grep access_token | awk '{ print $2 }')
  fi

  echo "Uploading $LOCAL_FILE_NAME"

  curl "https://localhost/api/v0/stemcells" \
    -k -# -o /dev/null \
    -X POST \
    -H "Authorization: Bearer $UAA_ACCESS_TOKEN" \
    -F "stemcell[file]=@$LOCAL_FILE_NAME"
}

upload_to_opsman() {
  local LOCAL_FILE_NAME=$1
  if [ -z "$LOCAL_FILE_NAME" ]; then
    read -r -p "Local file name: " LOCAL_FILE_NAME
  fi

  if [ ! -f "$LOCAL_FILE_NAME" ]; then
    error_and_exit "Invalid file: $LOCAL_FILE_NAME"
  fi

  local UAA_ACCESS_TOKEN=$(uaac context | grep access_token | awk '{ print $2 }')

  if ! is_valid_access_token "$UAA_ACCESS_TOKEN"; then
    login_to_uaac
    UAA_ACCESS_TOKEN=$(uaac context | grep access_token | awk '{ print $2 }')
  fi

  echo "Uploading $LOCAL_FILE_NAME"

  curl "https://localhost/api/v0/available_products" \
    -k -# -o /dev/null \
    -X POST \
    -H "Authorization: Bearer $UAA_ACCESS_TOKEN" \
    -F "product[file]=@$LOCAL_FILE_NAME"
}

upload_all_to_opsman() {
  for filename in $1; do
    upload_to_opsman $filename
  done
}

export_installation() {
  local LOCAL_FILE_NAME=$1

  if [ -z "$LOCAL_FILE_NAME" ]; then
    read -r -p "Export installation location: " LOCAL_FILE_NAME
  fi

  local OPSMAN_HOST=$2

  if [ -z "$OPSMAN_HOST" ]; then
    read -r -p "Opsman host: " OPSMAN_HOST
  fi

  echo "Saving installation export to: $LOCAL_FILE_NAME"
  echo "Using opsman host: $OPSMAN_HOST"

  curl "https://${OPSMAN_HOST}/api/v0/installation_asset_collection" \
    -k -# -o $LOCAL_FILE_NAME \
    -X GET \ 
    -H "Authorization: Bearer $UAA_ACCESS_TOKEN" 
}

CMD=$1 ARG=$2

if [ "login" = "$CMD" ]; then
  login_to_uaac
elif [ "upload" = "$CMD" ]; then
  upload_all_to_opsman "$ARG"
elif [ "stemcell" = "$CMD" ]; then
  upload_stemcell "$ARG"
elif [ "export" = "$CMD" ]; then
  export_installation "$ARG"
else
  usage_and_exit
fi
